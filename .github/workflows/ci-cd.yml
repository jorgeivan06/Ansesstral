name: CI/CD Pipeline

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    steps:
    # 1. Checkout del código
    - name: Checkout code
      uses: actions/checkout@v4
    
    # 2. Setup Node.js
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    # 3. Instalar dependencias
    - name: Install dependencies
      run: npm install
    
    # 4. Run tests (si existen)
    - name: Run tests
      run: |
        if [ -f package.json ] && npm run | grep -q test; then
          npm test
        else
          echo "No tests script found"
        fi
    
    # 5. Build de la aplicación
    - name: Build application
      run: |
        if [ -f package.json ] && npm run | grep -q build; then
          npm run build
        else
          echo "No build script found"
        fi

  docker-build-and-push:
    runs-on: ubuntu-latest
    needs: build-and-test
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    
    steps:
    # 1. Checkout del código
    - name: Checkout code
      uses: actions/checkout@v4
    
    # 2. Login a Docker Hub
    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    
    # 3. Build y push de la imagen Docker
    - name: Build and push Docker image
      run: |
        docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/ansesstral:latest .
        docker push ${{ secrets.DOCKERHUB_USERNAME }}/ansesstral:latest
